.text
start:
.globl start
li a0, 3 # показатель треугольника Паскаля, a0 = 3
li a2, 4 # const = 4, a2 = 4
li a3, 1 # const = 1, a3 = 1
add a1, a0, a3 # выделение памяти под элементы, a1 = a0 + a3
li a0, 9 # a0 = 9
ecall # системный вызов
sw a3, 0(a0) # записать 4 байта из x3 по адресу x0
mv s0, a0 # s0 = a0
li t1, 1 # t1 = 1
loop: # for (t1 = 1; t1 < t1 <= a1; t1++)
mv t2, t1 # t2 = t1
subloop: #for (t2 = t1; t2 >= 1; t2--)
sub t3, t2, a3 #синтез адреса памяти c[t2-1]
mul t3, a2, t3 # побитовое перемножение t3 и a2 с помещением полученных младших битов в t3
add t0, a0, t3 # t0 = a0 + t3
lw t4, 0(t0) # считать 4 байта по адресу t0 в a4
mul t3, a2, t2 #синтез адреса памяти c[t2]
add t0, a0, t3 # t0 = a0 + t3
lw t5, 0(t0) # считать 4 байта из t0 в t5
add t3, t4, t5 #c[t2] = c[t2-1]+c[t2]
sw t3, 0(t0) # записать 4 байта из x3 по адресу t0
sub t2, t2, a3 # вычитание, t2 = t2 - a3
bge t2, a3, subloop #t2 >= 1, вложенный цикл
add t1, t1, a3 # сумма t1 и a3, t1 = t1 + a3
blt t1, a1, loop # t1 < a1, выход из вложенного цикла
li t0, 0 # занулил t0
mv t1, a1 #записал в t1 адрес сегмента
sub a1, a1, a3 # вычитание, a1 = a1 - a3
print:
# напечатал число
li a0, 1 # a0 = 1
lw a1, 0(s0) # a1 = s0
ecall # системный вызов
li a0, 11 # a0 = 11
# напечатал пробел
li a1, ' ' # a1 = ' '
ecall # системный вызов
add s0, s0, a2 # синтезировал следующий адрес
add t0, t0, a3 # t0 = t0 + 1
bne t0, t1, print # t0 != t1 вызов корутины печати
li a0, 10 # a0 = 10
ecall # системный вызов